---
title: "Mood increases during video game play: A naturalistic observational case study of PowerWash Simulator"
description: Computational notebook supporting our manuscript
author:
  - name: Matti Vuorre
    orcid: 0000-0001-5052-066X
    email: mjvuorre@uvt.nl
    url: https://vuorre.netlify.app
    affiliation:
      - ref: a
      - ref: b
  - name: Nick Ballou
    orcid: 0000-0003-4126-0696
    affiliation:
      - ref: b
  - name: Andrew K. Przybylski
    orcid: 0000-0001-5547-2185
    affiliation:
      - ref: b
affiliations:
  - id: a
    name: Tilburg University
  - id: b
    name: University of Oxford
  
date: 2023-09-04
bibliography: bibliography.bib
format:
  pdf: default
  docx: default
  html: default
---

```{r}
#| label: setup
#| include: false

knitr::opts_chunk$set(
  message = FALSE,
  warning = FALSE,
  cache = TRUE,
  include = FALSE,
  echo = FALSE
)
```

```{r}
#| label: packages
#| cache: false

library(scales)
library(cmdstanr)
library(posterior)
library(brms)
library(ggstance)
library(ggdist)
library(patchwork)
library(tidyverse)
```

```{r}
#| label: options
#| cache: false

dir.create("models", FALSE)
N_CORES <- as.numeric(Sys.getenv("N_CORES", unset = 1))
N_THREADS <- as.numeric(Sys.getenv("N_THREADS", unset = 2))
N_ITER <- as.numeric(Sys.getenv("N_THREADS", unset = 2000))
N_SUBSET <- as.numeric(Sys.getenv("N_SUBSET"))
options(
  mc.cores = N_CORES,
  brms.backend = "cmdstanr"
)
theme_set(
  theme_linedraw(base_size = 10) +
    theme(
      strip.background = element_rect(fill = NA, color = NA),
      strip.text = element_text(colour = "black", hjust = 0),
      axis.text = element_text(size = rel(0.75)),
      panel.grid = element_blank()
    )
)
```

```{r}
#| label: functions

# Format big numbers with a comma
number2 <- function(x, ...) {
  number(x, ..., big.mark = ",")
}

# Replace extreme percentages
percent2 <- function(x, accuracy = .1) {
  x <- percent(x, accuracy = accuracy)
  x <- if_else(x == "100.0%", ">99.9%", x)
  x <- if_else(x == "0.0%", "<0.1%", x)
  x
}
```

```{r}
#| label: data-download

# Download, unzip data from OSF PWS database
path <- "data-raw/data.zip"
if (!file.exists(path)) {
  dir.create("data-raw", FALSE)
  download.file(
    url = "https://osf.io/download/j48qf/",
    destfile = "data-raw/data.zip"
  )
  dir.create("data", FALSE)
  unzip(
    zipfile = path,
    files = c("data/demographics.csv", "data/study_prompt_answered.csv")
  )
}
```

```{r}
#| label: data-load

dat <- read_csv(
  "data/study_prompt_answered.csv",
  col_select = c(
    pid,
    time = Time_utc,
    duration = CurrentSessionLength,
    prompt = LastStudyPromptType,
    mood = response
  )
) |>
  mutate(
    pid = factor(pid),
    mood = mood / 1000
  )

# Calculate raw data summaries
sraw <- list()
sraw$n_res <- dat |>
  count(prompt)
sraw$n_res_total <- number2(sum(sraw$n_res$n))
sraw$n_res <- sraw$n_res |>
  mutate(n = number2(n)) |>
  pivot_wider(names_from = prompt, values_from = n)
sraw$n_sub <- number2(length(unique(dat$pid)))

# Create sessions using heuristics below
dat <- dat |>
  arrange(pid, time) |>
  mutate(
    i = row_number(),
    # Observation is in a new session if this...
    new_session =
      # is the first total observation,
      i == 1 |
      # session duration is zero,
      (duration == 0) |
      # session is shorter than previous session (ticker has reset),
      (duration < lag(duration, default = 0)) |
      # or if more than 30 minutes since previous observation.
      (time > lag(time) + minutes(30)),
    # Session number is the cumulative sum of new sessions...
    session = cumsum(new_session),
    # ... per person
    .by = pid
  ) |>
  select(-c(i, new_session))


# Filter data:
# Include only wellbeing responses that occurred
# in sessions with both "pre" and "post" measures
dat <- dat |>
  filter(prompt == "Wellbeing") |>
  select(-prompt)

# Count of data with all wellbeing observations
dat_total <- dat |>
  summarise(
    n_total = n(),
    n_players = length(unique(pid))
  )

# Include only sessions with "pre-" and "post" measure(s)
dat <- dat |>
  filter(
    # Session has a wellbeing measure at time = 0
    duration[1] == 0,
    # Session has at least two non-missing wellbeing measures 
    # (e.g. pre + 1 post)
    sum(!is.na(mood)) > 1,
    .by = c(pid, session)
  )

if(!is.na(N_SUBSET)) {
  pid_subset <- sample(unique(dat$pid), N_SUBSET)
  dat <- filter(dat, pid %in% pid_subset)
}

# Count of data to be used in these analyses
dat_filtered <- dat |>
  summarise(
    n_total = n(),
    n_players = length(unique(pid))
  )

# Summary
bind_rows(
  "total" = dat_total,
  "filtered" = dat_filtered,
  .id = "Data"
)

# Summaries of filtered data
s <- list()
s$n_sub <- number2(length(unique(dat$pid)))
s$n_obs <- number2(nrow(dat))
s$n_obs_missing <- number2(nrow(filter(dat, is.na(mood))))
s$n_ses <- number2(nrow(count(dat, pid, session)))
```

# Methods

## Participants

```{r}
#| label: demographics-load

demo <- read_csv(
  "data/demographics.csv",
  col_select = c(pid, country, gender, age)
) |>
  filter(pid %in% unique(dat$pid))

a <- quantile(demo$age, probs = c(.5, .1, .9), na.rm = TRUE)
a <- str_glue("{a[1]} ({a[2]}, {a[3]})")
g <- count(demo, gender, sort = TRUE) |>
  mutate(p = n / sum(n)) |>
  mutate(x = str_glue("{gender} ({number2(n)}, {percent2(p)})"))
n_countries <- length(unique(demo$country[!is.na(demo$country)]))
countries <- count(demo, country, sort = TRUE) |>
  mutate(p = n / sum(n)) |>
  mutate(x = str_glue("{country} ({number2(n)}, {percent2(p)})"))
```

The PowerWash Simulator case study database contains `r sraw$n_res_total` psychological item responses from `r sraw$n_sub` individuals. In this study, we only studied subjective well-being (mood), so did not consider the other five types of item responses in the database (enjoyment, focus, autonomy, competence, and immersion). Therefore, here we used data from `r s$n_sub` participants who provided `r s$n_obs` mood responses (`r s$n_obs_missing` with missing values, which we ignored) from `r s$n_ses` gameplay sessions.

These participants median age (1st & 9th deciles) was `r a`, and four most frequent responses to gender were `r g$x[1:4]`. They hailed from `r n_countries`, with four most represented countries being `r countries$x[1:4]`.

The study procedures were granted ethical approval by Oxford University’s Central University Research Ethics Committee (SSH_OII_CIA_21_011). All participants provided informed consent to participate and reported being 18 years or older.

## Data analysis

```{r}
#| label: data-wrangle-for-analysis

dat <- dat |>
  mutate(
    post = factor(
      row_number() > 1,
      levels = c(FALSE, TRUE),
      labels = c("0", "1")
    ),
    .by = c(pid, session)
  ) |>
  mutate(ps = interaction(pid, session, sep = "_")) |>
  mutate(
    cl = case_when(
      mood == 0 ~ "left",
      mood == 1 ~ "right",
      TRUE ~ "none"
    )
  )
```

Our research question concerned the difference between players’ mood at the beginning of each session (pre-play) and during the subsequent play session (during play). It is important to understand that this contrast does not embed a causal hypothesis: Players could begin (and end) their play ses-sions for whatever reason, and these reasons are likely to confound the pre -- during contrast. For example, a player might come home after a stressful day at work, and sit down to play some PWS. During this play session, their mood would improve because they are at home vs. stressful work environment, and would show as a greater during play mood compared to pre-play mood: Reasons behind starting a play session are likely to contribute to the pre -- during contrast and we are unable to disentangle those from any changes actually caused by play.

We estimated this contrast within a censored three-level hierarchical regression model. We specified a censored gaussian model because mood was measured with a VAS. Ignoring the censoring inherent in VAS responses can confound changes in the mean with changes in the spread of mood, and leave the contrast susceptible to ceiling or floor effects. We then modelled mean mood on an intercept and contrast coded time (pre-play: -0.5; during play: 0.5), and allowed both parameters to vary randomly across players. In addition, we modelled random intercepts over player-sessions because over time, mood is susceptible to myriad other influences. Although equal variances across people in such naturalistic observation seem unlikely, we fixed this parameter to a constant for model identifiability and convergence.

More formally, we modelled each mood response *i* in 1 to `r s$n_obs` from participant *j* in 1 to `r s$n_sub` and participant-session *k* in 1 to `r s$n_ses` with a normal distribution censored at the VAS limits [0, 1]. We then modelled the distribution's mean ($\eta$) on a population-level intercept ($\beta_0$) and contrast-coded measurement timepoint ($\beta_1$), their random per-player deviations $\alpha$, and a random intercept for player-sessions $\gamma_0$:

\begin{align*}
\text{mood}_{ijk} &\sim \text{CensNormal}(\eta_{ijk}, \sigma^2, 0, 1), \\
\eta_{ijk} &= \alpha_0 + \beta_{0j} +
  (\alpha_1 + \beta_{1j})\text{post}_{ijk} +
  \gamma_{0k}, \\
\begin{bmatrix} \alpha_0 \\ \alpha_1 \end{bmatrix} &\sim 
  \text{MVN}\left(\begin{bmatrix} 0 \\ 0 \end{bmatrix}, 
  \begin{bmatrix} 
    \tau_{\alpha_0} &\rho_{{\alpha_0}{\alpha_1}} \\ 
    \rho_{{\alpha_0}{\alpha_1}} &\tau_{\alpha_1}
  \end{bmatrix}\right), \\
  \gamma_0 &\sim \text{Normal}(0, \tau_{\gamma_0}).
\end{align*}

```{r}
#| label: model-estimate
#| cache: false

contrasts(dat$post) <- c(-0.5, 0.5)

model <- bf(mood | cens(cl) ~ 1 + post + (1 + post | pid) + (1 | ps)) +
  gaussian()

fit <- brm(
  model,
  data = dat,
  silent = 0,
  threads = N_THREADS,
  iter = N_ITER,
  control = list(adapt_delta = .95),
  file = "models/brm-pre-post-pid-ps-censored"
)
```

```{r}
#| label: model-convergence
#| eval: false

library(posterior)
as_draws(fit, variable = c("b_", "sd_", "cor_"), regex = TRUE) |> 
  summarise_draws(rhat)
pairs(fit$fit, pars = variables(fit)[1:7])
```

We analyzed the data with R [@rcoreteamLanguageEnvironmentStatistical2023] and used the brms package to estimate, via Stan's HMC sampling procedures, and post-process the models [@burknerBrmsPackageBayesian2017; @standevelopmentteamStanModelingLanguage2022]. We drew `r number2(ndraws(fit))` samples from the posterior distribution using brms' default prior distributions on all parameters, and used numerical and graphical checks to ensure model convergence and adequacy.

# Results

```{r}
#| label: fig-descriptives
#| include: false
#| fig-height: 2.2
#| fig-width: 7
#| fig-cap: '**A**. Histogram of session durations (note log10 x-axis). **B**. Summary of how many sessions each participant completed. **C**. Histogram of all mood ratings.'

p0 <- dat |>
  ggplot() +
  scale_x_continuous(
    expand = expansion(c(0.01, 0.01)),
  ) +
  scale_y_continuous(
    expand = expansion(c(0.001, 0.1)),
  ) +
  geom_histogram(
    col = "white",
    linewidth = .25
  )

dat_session_durations <- dat |>
  filter(duration == max(duration), .by = c(pid, session))

dat_session_counts <- dat |>
  distinct(pid, session) |>
  count(pid, name = "sessions")

p_durations <- p0 %+%
  dat_session_durations +
  aes(duration) +
  scale_x_log10() +
  coord_cartesian(xlim = c(5, 900)) +
  labs(x = "Session duration (minutes)", y = "Sessions")


p_sessions <- p0 %+%
  dat_session_counts +
  coord_cartesian(xlim = c(0, 15)) +
  aes(sessions) +
  labs(x = "Sessions", y = "Participants")

p_mood <- p0 +
  aes(mood) +
  labs(x = "Mood", y = "Responses")


(p_durations | p_sessions | p_mood) +
  plot_annotation(tag_level = "A")
```

```{r}
tmp <- list(
  dat_session_durations$duration,
  dat_session_counts$sessions,
  dat$mood,
  dat$mood[dat$post == 0],
  dat$mood[dat$post == 1]
) |> 
  map(~median_qi(.x, .width = 0.8, na.rm = TRUE)) |> 
  map(~str_glue_data(.x, "{y} [{ymin}, {ymax}]"))
```

The median session duration was `r tmp[[1]]` minutes [10 and 90 percentiles]; the median player contributed data from `r tmp[[2]]` sessions, and the median mood was `r tmp[[3]]` (pre-session: `r tmp[[4]]`, during play: `r tmp[[5]]`). 

```{r}
#| label: fig-data
#| include: true
#| fig-width: 8
#| fig-height: 5
#| fig-cap: "**A**. Representative data from three participants (rows) showing scatterplots of mood responses over that session's (columns) duration. Each session's first mood response is highlighted in red, subsequent reports are blue. **B**. Horizontal histograms of all sessions' mood response for that person, with means and bootstrapped 95%CIs. **C**. Histograms of session-mean (**D**. person-mean) moods before (top) and during (bottom) sessions. **E**. Differences in session-mean (**F**. player-mean) mood differences (during session - pre-play). **G**. Scatterplot of person-mean mood reports at beginning (x-axis) and during game play sessions (y-axis)."

axislabels <- c(0, 0.5, 1.0)

# Plot: Example raw sessions
set.seed(99)
dat_example_sessions <- dat |>
  add_count(pid, session, name = "obs_per_session") |>
  filter(obs_per_session >= 4) |>
  mutate(session = as.numeric(as.factor(session)), .by = pid) |>
  mutate(session_per_person = length(unique(session)), .by = pid)
# default 
min_sessions <- 4 
n_filtered <- dat_example_sessions |> 
  distinct(pid, session_per_person) |> 
  filter(session_per_person >= 4) |> 
  nrow()
# pick anyone if there's not 3 pids with >= 4 sessions
if(n_filtered < 3) min_sessions <- 0
dat_example_sessions <- dat_example_sessions |>
 filter(session_per_person >= min_sessions) |>
  arrange(pid, session) |>
  filter(pid %in% sample(unique(pid), 3)) |>
  mutate(Session = str_glue("Session {session}"), Person = str_glue("Person {fct_anon(pid)}"))

p_mood_example_sessions <- dat_example_sessions |> 
  ggplot() +
  aes(duration / 60, mood, col = post) +
  scale_color_brewer(
    "Pre-session measure",
    palette = "Set1",
    aesthetics = c("color", "fill")
  ) +
  scale_x_continuous(
    "Session duration (hours)"
  ) +
  scale_y_continuous(
    "Mood",
    limits = c(0, 1),
    breaks = axislabels,
    labels = axislabels
  ) +
  geom_point(size = 1.5, alpha = 1) +
  facet_grid(
    rows = vars(Person), 
    cols = vars(Session),
    scales = "free_x"
  ) +
  theme(
    legend.position = "none",
    strip.text.y = element_blank()
  )

p_mood_example_all <- dat_example_sessions |> 
  mutate(Session = "All sessions") |> 
  ggplot() +
  aes(y = mood, x = post, col = post, fill = post) +
  scale_color_brewer(
    "Pre-session measure",
    palette = "Set1",
    aesthetics = c("color", "fill")
  ) +
  scale_x_discrete(
    "Session",
    breaks = c(0, 1),
    labels = c("Pre", "During"),
    expand = expansion(c(0.2, 2.4))
  ) +
  scale_y_continuous(
    limits = c(0, 1),
    breaks = axislabels,
    labels = axislabels
  ) +
  stat_summary(
    fun.data = mean_cl_boot,
    fatten = 2
  ) +
  geom_dots(side = "right", alpha = .33, binwidth = .075) +
  facet_grid(
    rows = vars(Person), 
    cols = vars(Session)
  ) +
  theme(
    axis.text.y = element_blank(), 
    axis.title.y = element_blank(), 
    axis.ticks.y = element_blank(), 
    axis.text.x = element_text(hjust = 0),
    strip.background.y = element_blank(),
    legend.position = "none"
  )

p_mood_example <- (p_mood_example_sessions | p_mood_example_all) +
  plot_layout(widths = c(92, 8))


# Plot: Raw mood histograms at pre and during play
p_mood_prepost_raw <- dat |> 
  mutate(post = factor(post, labels =  c("Pre-play", "During play"))) |>
  ggplot(aes(mood, fill = post)) +
  scale_color_brewer(
    "Pre-session measure",
    palette = "Set1",
    aesthetics = c("color", "fill")
  ) +
  geom_histogram(bins = 30, col = "white") +
  scale_y_continuous(
    "Observations",
    expand = expansion(c(0.001, 0.1)),
    breaks = scales::extended_breaks(5)
  ) +
  scale_x_continuous(
    "Mood",
    expand = expansion(c(0.001)),
    breaks = axislabels
  ) +
  facet_wrap("post", ncol = 1, scales = "free_y") +
  theme(legend.position = "none")

# Plot: Person-session-mean mood histograms at pre and during play
p_mood_prepost_sessions <- p_mood_prepost_raw %+%
  summarise(
    p_mood_prepost_raw$data,
    mood = mean(mood, na.rm = TRUE), .by = c(post, pid, ps)
  ) +
  scale_y_continuous(
    "Sessions",
    expand = expansion(c(0.001, 0.1)),
    breaks = scales::extended_breaks(5)
  )

# Plot: Person-mean mood histograms at pre and during play
p_mood_prepost_players <- p_mood_prepost_sessions %+%
  summarise(
    p_mood_prepost_raw$data,
    mood = mean(mood, na.rm = TRUE), .by = c(post, pid)
  ) +
  scale_y_continuous(
    "Players",
    expand = expansion(c(0.001, 0.1)),
    breaks = scales::extended_breaks(5)
  )

# Plot: Difference histogram (sessions)
p_mood_difference_sessions <- p_mood_prepost_sessions$data |> 
  pivot_wider(names_from = post, values_from = mood) |> 
  ggplot(aes(`During play` - `Pre-play`)) +
  geom_histogram(bins = 50, col = "white") +
  geom_vline(xintercept = 0, linewidth = .33, col = "dodgerblue") +
  scale_y_continuous(
    "Sessions",
    expand = expansion(c(0.001, 0.1))
  ) +
  scale_x_continuous(
    "Difference",
    expand = expansion(c(0.001))
  ) +
  coord_cartesian(xlim = c(-0.4, 0.6))

# Plot: Difference histogram (players)
p_mood_difference_players <- p_mood_difference_sessions %+% 
  summarise(
    p_mood_difference_sessions$data,
    across(`Pre-play`:`During play`, ~mean(.x, na.rm = TRUE)),
    .by = pid
  ) +
  scale_y_continuous(
    "Players",
    expand = expansion(c(0.001, 0.1))
  )

p_mood_difference <- (
  (p_mood_difference_sessions + 
     theme(
      axis.title.x = element_blank(), 
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank()
    )) / 
    p_mood_difference_players
  )


p_mood_biscatter_sessions <- p_mood_difference_sessions$data |> 
  ggplot(aes(`Pre-play`, `During play`)) +
  scale_x_continuous(
    expand = expansion(0.01),
    breaks = axislabels,
    labels = axislabels
  ) +
  scale_y_continuous(
    expand = expansion(0.01),
    breaks = axislabels,
    labels = axislabels
  ) +
  geom_point(
    alpha = .25, size = 1, shape = 1
  ) +
  geom_abline(linewidth = .33, col = "dodgerblue") +
  theme(aspect.ratio = 1)

p_mood_biscatter_players <- p_mood_biscatter_sessions %+% 
  p_mood_difference_players$data
  

p_mood_biscatter <- (p_mood_biscatter_sessions / p_mood_biscatter_players)

p_mood_example / 
  (
    p_mood_prepost_sessions | 
      p_mood_prepost_players | 
      p_mood_difference | 
      p_mood_biscatter_players
  ) +
  plot_layout(heights = c(4.5, 5.5)) +
  plot_annotation(tag_levels = "A")
```

We then turned to our primary research question: To what extent does player mood in PWS change from pre-play to during play? First, we visualized the relevant data in @fig-data: Panel A shows mood responses from three example participants' first five sessions of play. @fig-data B then shows histograms of those data to facilitate visual comparison of the raw data. We then calculated sessions' and participants' mean moods at the beginning and during each session (@fig-data C, D, and G), and their differences (E and F). Visual inspection suggested greater mood during play compared to the pre-play measures at both the level of sessions and players.

```{r}
#| label: tbl-avg
#| include: true
#| tbl-cap: Population level average mood at beginning and during a game play session, and their difference (during - pre-play). (Estimate = posterior mean, CI = 95% quantile interval, pd = probability of direction.)

hs <- c(
  "Pre-play" = "Intercept + post1 * -.5 = 0",
  "During play" = "Intercept + post1 * .5 = 0",
  "Difference" = "post1 = 0"
)

h_avg_ <- hypothesis(fit, hs)
h_avg <- tibble(h_avg_$samples)
names(h_avg) <- names(hs)
h_avg |> 
  summarise_draws(
    mean = ~number(mean(.), .001), 
    ~number2(quantile2(., probs = c(.025, .975)), .001), 
    pd = ~percent2(Pr(. > 0))
  ) |> 
  mutate(CI = str_glue("[{q2.5}, {q97.5}]")) |> 
  select(` ` = variable, Estimate = mean, CI, pd) |> 
  knitr::kable()
```

The model results confirmed the visual impressions described above: @tbl-avg indicates, with great certainty, that mood increased by about [`r paste0(map(h_avg_$hypothesis[3,4:5], ~number(.x, .001)), collapse = ", ")`] units. 

```{r}
#| label: scaled-coefficients

posterior_pop <- as_draws_df(
  fit, 
  c("sd_pid__Intercept", "sd_pid__post1", "sigma", "b_post1")
) |> 
  mutate(
    total_residual = sd_pid__Intercept + sd_pid__post1 + sigma,
    b_post1_scaled = b_post1 / total_residual
  ) |> 
  tibble() |> 
  select(-starts_with("."))

posterior_pop_sum <- posterior_pop |> 
  summarise_draws(
    mean = ~number(mean(.), .001), 
    ~number2(quantile2(., probs = c(.025, .975)), .001)
  ) |> 
  mutate(
    x = str_glue("{mean} [{q2.5}, {q97.5}]")
  )
```

To further interpret the magnitude of the difference in moods between pre- and during play, we compared the contrast to the natural variations in mood as estimated by the model (standard deviation of the between-person intercept heterogeneity ($\tau_{\alpha_0}$ = `r posterior_pop_sum$x[1]`), between-person pre-during difference heterogeneity ($\tau_{\alpha_1}$ = `r posterior_pop_sum$x[2]`) and to the residual standard deviation ($\sigma$ = `r posterior_pop_sum$x[3]`). The standardized (with the total residual variation from the three above components) pre-play -- during play contrast was `r posterior_pop_sum$x[6]`, a not ignorable difference.

# Bibliography

::: {#refs}
:::
