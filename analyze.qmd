# Analyze {#sec-analyze}

```{r}
#| label: setup
#| include: false

knitr::opts_chunk$set(
  message = FALSE,
  warning = FALSE,
  cache = TRUE,
  include = TRUE,
  echo = TRUE
)
```

```{r}
#| label: packages
#| cache: false

library(scales)
library(cmdstanr)
library(posterior)
library(brms)
library(ggstance)
library(ggdist)
library(patchwork)
library(tidyverse)
source("R/functions.R")
source("R/fit_cached.R")
source("R/common.R")
dir.create("models", FALSE)
```

```{r}
dat <- readRDS("data/data.rds")

if (!is.na(N_SUBSET)) {
  pid_subset <- sample(unique(dat$pid), N_SUBSET)
  dat <- filter(dat, pid %in% pid_subset)
}
```

## Participants

```{r}
#| label: demographics-load

demo <- read_csv(
  "data/demographics.csv",
  col_select = c(pid, country, gender, age)
) |>
  filter(pid %in% unique(dat$pid))

a <- quantile(demo$age, probs = c(.5, .1, .9), na.rm = TRUE)
a <- str_glue("{a[1]} ({a[2]}, {a[3]})")
```

- N participants: `r number2(length(unique(dat$pid)))`
- N sessions: `r number2(length(unique(dat$ps)))`
- age: `r a`
- gender:

```{r}
#| label: demographics-gender

count(demo, gender, sort = TRUE) |>
  mutate(p = n / sum(n)) |>
  mutate(x = str_glue("{gender} ({number2(n)}, {percent2(p)})"))
```

- countries:
```{r}
#| label: demographics-countries

n_countries <- length(unique(demo$country[!is.na(demo$country)]))
count(demo, country, sort = TRUE) |>
  mutate(p = n / sum(n)) |>
  mutate(x = str_glue("{country} ({number2(n)}, {percent2(p)})"))
```

## Descriptives

```{r}
#| label: fig-descriptives
#| fig-height: 2.2
#| fig-width: 7
#| fig-cap: '**A**. Histogram of session durations (note log10 x-axis). **B**. Summary of how many sessions each participant completed. **C**. Histogram of all mood ratings.'

p0 <- dat |>
  ggplot() +
  scale_x_continuous(
    expand = expansion(c(0.01, 0.01)),
  ) +
  scale_y_continuous(
    expand = expansion(c(0.001, 0.05)),
  ) +
  geom_histogram(
    col = "white",
    bins = 50,
    linewidth = .25,
    boundary = 0
  )

dat_session_durations <- dat |>
  filter(hours == max(hours), .by = c(pid, session))

dat_session_counts <- dat |>
  distinct(pid, session) |>
  count(pid, name = "sessions")

p_durations <- p0 %+%
  dat_session_durations +
  aes(hours) +
  labs(x = "Session duration (hours)", y = "Sessions")

p_sessions <- p0 %+%
  dat_session_counts +
  coord_cartesian(xlim = c(0, 75)) +
  aes(sessions) +
  labs(x = "Sessions", y = "Participants")

p_mood <- p0 +
  aes(mood) +
  labs(x = "Mood", y = "Responses")

(p_durations | p_sessions | p_mood) +
  plot_annotation(tag_levels = "A")
```

```{r}
tmp <- list(
  dat_session_durations$hours,
  dat_session_counts$sessions,
  dat$mood,
  dat$mood[dat$post == 0],
  dat$mood[dat$post == 1]
) |> 
  map(~median_qi(.x, .width = 0.8, na.rm = TRUE)) |> 
  map(~mutate(.x, across(c(y, ymin, ymax), ~number2(., .01))) |> str_glue_data("{y} [{ymin}, {ymax}]"))
```

The median session duration was `r tmp[[1]]` hours [10 and 90 percentiles]; the median player contributed data from `r tmp[[2]]` sessions, and the median mood was `r tmp[[3]]` (pre-session: `r tmp[[4]]`, during play: `r tmp[[5]]`). 

```{r}
#| label: fig-data
#| include: true
#| fig-width: 8
#| fig-height: 4.6
#| fig-cap: "**A**. Representative data from three participants (rows) showing scatterplots of mood responses over that session's (columns) duration. Each session's first mood response is highlighted in red, subsequent reports are blue. **B**. Horizontal histograms of all sessions' mood response for that person, with means and bootstrapped 95%CIs. **C**. Histograms of session-mean (**D**. person-mean) moods before (top) and during (bottom) sessions. **E**. Differences in session-mean (**F**. player-mean) mood differences (during session - pre-play). **G**. Scatterplot of person-mean mood reports at beginning (x-axis) and during game play sessions (y-axis)."

# Plot: Example raw sessions
set.seed(99)
dat_example_sessions <- dat |>
  add_count(pid, session, name = "obs_per_session") |>
  filter(obs_per_session >= 4) |>
  mutate(session = as.numeric(as.factor(session)), .by = pid) |>
  mutate(session_per_person = length(unique(session)), .by = pid)

# default 
min_sessions <- 8
n_filtered <- dat_example_sessions |> 
  distinct(pid, session_per_person) |> 
  filter(session_per_person >= 8) |> 
  nrow()

# pick anyone if there's not 3 pids with >= 4 sessions
if(n_filtered < 3) min_sessions <- 0
dat_example_sessions <- dat_example_sessions |>
  filter(session_per_person >= min_sessions) |>
  arrange(pid, session) |>
  filter(pid %in% sample(unique(pid), 3)) |>
  mutate(Session = str_glue("Session {session}"), Person = str_glue("Person {fct_anon(pid)}"))

p_mood_example <- dat_example_sessions |> 
  filter(session <= 8) |> 
  ggplot() +
  aes(hours, mood, col = post) +
  scale_color_brewer(
    "Pre-session measure",
    palette = "Set1",
    aesthetics = c("color", "fill")
  ) +
  scale_x_continuous(
    "Session duration (hours)"
  ) +
  scale_y_continuous(
    "Mood",
    limits = c(0, 1),
  ) +
  geom_point(size = 1.5, alpha = 1) +
  facet_grid(
    rows = vars(Person), 
    cols = vars(Session),
    scales = "fixed"
  ) +
  theme(
    legend.position = "none",
    strip.text.y = element_blank()
  )

# Plot: Raw mood histograms at pre and during play
p_mood_prepost_raw <- dat |> 
  mutate(post = factor(post, labels =  c("Pre-play", "During play"))) |>
  ggplot(aes(mood, fill = post)) +
  scale_color_brewer(
    "Pre-session measure",
    palette = "Set1",
    aesthetics = c("color", "fill")
  ) +
  geom_histogram(bins = 30, col = "white") +
  scale_y_continuous(
    "Observations",
    expand = expansion(c(0.001, 0.1)),
    breaks = scales::extended_breaks(5)
  ) +
  scale_x_continuous(
    "Mood",
    expand = expansion(c(0.001))
  ) +
  facet_wrap("post", ncol = 1, scales = "free_y") +
  theme(legend.position = "none")

# Plot: Person-session-mean mood histograms at pre and during play
p_mood_prepost_sessions <- p_mood_prepost_raw %+%
  summarise(
    p_mood_prepost_raw$data,
    mood = mean(mood, na.rm = TRUE), .by = c(post, pid, ps)
  ) +
  scale_y_continuous(
    "Sessions",
    expand = expansion(c(0.001, 0.1)),
    breaks = scales::extended_breaks(5)
  )

# Plot: Person-mean mood histograms at pre and during play
p_mood_prepost_players <- p_mood_prepost_sessions %+%
  summarise(
    p_mood_prepost_raw$data,
    mood = mean(mood, na.rm = TRUE), .by = c(post, pid)
  ) +
  scale_y_continuous(
    "Players",
    expand = expansion(c(0.001, 0.1)),
    breaks = scales::extended_breaks(5)
  )

# Plot: Difference histogram (sessions)
p_mood_difference_sessions <- p_mood_prepost_sessions$data |> 
  pivot_wider(names_from = post, values_from = mood) |> 
  mutate(Difference = `During play` - `Pre-play`) |> 
  drop_na(Difference) |> 
  ggplot(aes(Difference)) +
  geom_histogram(bins = 50, col = "white") +
  geom_vline(xintercept = 0, linewidth = .33, col = "dodgerblue") +
  scale_y_continuous(
    "Sessions",
    expand = expansion(c(0.001, 0.1))
  ) +
  scale_x_continuous(
    expand = expansion(c(0.001))
  ) +
  coord_cartesian(xlim = c(-.4, .6))

# Plot: Difference histogram (players)
p_mood_difference_players <- p_mood_prepost_players$data |> 
  pivot_wider(names_from = post, values_from = mood) |> 
  mutate(Difference = `During play` - `Pre-play`) |> 
  drop_na(Difference) |> 
  ggplot(aes(Difference)) +
  geom_histogram(bins = 50, col = "white") +
  geom_vline(xintercept = 0, linewidth = .33, col = "dodgerblue") +
  scale_y_continuous(
    "Players",
    expand = expansion(c(0.001, 0.1))
  ) +
  scale_x_continuous(
    expand = expansion(c(0.001))
  ) +
  coord_cartesian(xlim = c(-.4, .6))

p_mood_difference <- (
  (p_mood_difference_sessions + 
     theme(
      axis.title.x = element_blank(), 
      axis.text.x = element_blank(),
      axis.ticks.x = element_blank()
    )) / 
    p_mood_difference_players
  )


p_mood_biscatter_sessions <- p_mood_difference_sessions$data |> 
  ggplot(aes(`Pre-play`, `During play`)) +
  scale_x_continuous(
    expand = expansion(0.01)
  ) +
  scale_y_continuous(
    expand = expansion(0.01)
  ) +
  geom_point(
    alpha = .25, size = 1, shape = 1
  ) +
  geom_abline(linewidth = .33, col = "dodgerblue") +
  theme(aspect.ratio = 1)

p_mood_biscatter_players <- p_mood_difference_players$data |> 
  ggplot(aes(`Pre-play`, `During play`)) +
  scale_x_continuous(
    expand = expansion(0.01)
  ) +
  scale_y_continuous(
    expand = expansion(0.01)
  ) +
  geom_point(
    alpha = .25, size = 1, shape = 1
  ) +
  geom_abline(linewidth = .33, col = "dodgerblue") +
  theme(aspect.ratio = 1)
  

p_mood_biscatter <- (p_mood_biscatter_sessions / p_mood_biscatter_players)

p_mood_example / 
  (
    p_mood_prepost_sessions | 
      p_mood_prepost_players | 
      p_mood_difference | 
      p_mood_biscatter_players
  ) +
  plot_layout(heights = c(5, 5)) +
  plot_annotation(tag_levels = "A")
```

## Model

Our research question concerned the difference between playersâ€™ mood at the beginning of each session (pre-play) and during the subsequent play session (during play). It is important to understand that this contrast does not embed a causal hypothesis: Players could begin (and end) their play ses-sions for whatever reason, and these reasons are likely to confound the pre -- during contrast. For example, a player might come home after a stressful day at work, and sit down to play some PWS. During this play session, their mood would improve because they are at home vs. stressful work environment, and would show as a greater during play mood compared to pre-play mood: Reasons behind starting a play session are likely to contribute to the pre -- during contrast and we are unable to disentangle those from any changes actually caused by play.

We estimated this contrast within a censored three-level hierarchical regression model. We specified a censored gaussian model because mood was measured with a VAS. Ignoring the censoring inherent in VAS responses can confound changes in the mean with changes in the spread of mood, and leave the contrast susceptible to ceiling or floor effects. We then modelled mean mood on an intercept and contrast coded time (pre-play: -0.5; during play: 0.5), and allowed both parameters to vary randomly across players. In addition, we modelled random intercepts over player-sessions because over time, mood is susceptible to myriad other influences. Although equal variances across people in such naturalistic observation seem unlikely, we fixed this parameter to a constant for model identifiability and convergence.

More formally, we modelled each mood response *i* in 1 to `r number2(nrow(dat))` from participant *j* in 1 to `r number2(length(unique(dat$pid)))` and participant-session *k* in 1 to `r number2(length(unique(dat$ps)))` with a normal distribution censored at the VAS limits [0, 1]. We then modelled the distribution's mean ($\eta$) on a population-level intercept ($\beta_0$) and contrast-coded measurement timepoint ($\beta_1$), their random player ($\alpha$) and player-session ($\gamma$) deviations,

$$
\begin{align*}
\text{mood}_{ijk} &\sim \text{CensNormal}(\eta_{ijk}, \sigma^2, 0, 1), \\
\eta_{ijk} &= \alpha_0 + \beta_{0j} + \gamma_{0k} +
  (\alpha_1 + \beta_{1j})\text{post}_{ijk}, \\
\begin{bmatrix} \alpha_0 \\ \alpha_1 \end{bmatrix} &\sim 
  \text{MVN}\left(\begin{bmatrix} 0 \\ 0 \end{bmatrix}, 
  \begin{bmatrix} 
    \tau_{\alpha_0} &\rho_{{\alpha_0}{\alpha_1}} \\ 
    \rho_{{\alpha_0}{\alpha_1}} &\tau_{\alpha_1}
  \end{bmatrix}\right), \\
\begin{bmatrix} \gamma_0 \end{bmatrix} &\sim 
  \text{Normal}\left(\begin{bmatrix} 0 \end{bmatrix}, 
  \begin{bmatrix} 
    \tau_{\gamma_0}
  \end{bmatrix}\right).
\end{align*}
$$

```{r}
#| label: model-estimate-brms
#| cache: false

model <- bf(
  mood | cens(cl) ~ 
    1 + post + 
    (1 + post | pid) + 
    (1 | ps)
) +
  gaussian()

fit <- brm(
  model,
  data = dat,
  silent = 0,
  iter = N_ITER,
  control = list(adapt_delta = .95),
  file = "models/brm-prepost-pid-ps-censored"
)
```

```{r}
#| label: fig-convergence
#| fig-cap: Convergence diagnostic plot showing bivariate scatterplots of the model's population-level parameters' posterior draws.

pairs(
  fit, 
  variable = c("b_", "sd_", "cor_"), 
  regex = TRUE,
  off_diag_args = list(size = .33, shape = 1)
  )
```

## Population level effects

```{r}
#| label: tbl-avg
#| include: true
#| tbl-cap: Population level average mood at beginning and during a game play session, and their difference (during - pre-play). (Estimate = posterior mean, CI = 95% quantile interval, pd = probability of direction.)

hs <- c(
  "Pre-play" = "Intercept + post1 * -.5 = 0",
  "During play" = "Intercept + post1 * .5 = 0",
  "Difference" = "post1 = 0"
)

h_avg_ <- hypothesis(fit, hs)
h_avg <- tibble(h_avg_$samples)
names(h_avg) <- names(hs)
h_avg_tab <- h_avg |> 
  summarise_draws(
    mean = ~number(mean(.), .001), 
    ~number2(quantile2(., probs = c(.025, .975)), .001), 
    pd = ~percent2(Pr(. > 0))
  ) |> 
  mutate(CI = str_glue("[{q2.5}, {q97.5}]")) |> 
  select(` ` = variable, Estimate = mean, CI, pd)
h_avg_tab |>   
  knitr::kable()
```

```{r}
#| label: scaled-coefficients

posterior_pop <- as_draws_df(
  fit, 
  c("sd_", "sigma", "b_post1"),
  regex = TRUE
) |> 
  mutate(
    tr = sd_pid__Intercept + sd_pid__post1 + sd_ps__Intercept + sigma,
    b_post1_z = b_post1 / tr,
    prop_pos = pnorm(0, b_post1, sd_pid__post1, lower.tail = FALSE)
  ) |> 
  tibble() |> 
  select(-starts_with("."))
posterior_pop |> 
  summarize_draws(
    mean, ~quantile2(., probs = c(0.025, 0.975))
  ) |> 
  knitr::kable(digits = 3)
```

## Heterogeneity

```{r}
#| label: heterogeneity-calculate

posterior_pid <- coef(fit, summary = FALSE)$pid[,,"post1"]
posterior_pid_scaled <- apply(
  posterior_pid, 2, 
  function(x) x / posterior_pop$tr
) |> 
  apply(2, function(x) mean_qi(x)) |> 
  bind_rows(.id = "pid")
posterior_pid <- posterior_pid |> 
  apply(2, function(x) mean_qi(x)) |> 
  bind_rows(.id = "pid")

posterior_pid_sum <- bind_rows(
  "b_post1" = posterior_pid,
  "b_post1_z" = posterior_pid_scaled,
  .id = "name"
) |> tibble()
```

```{r}
#| label: fig-coef
#| include: true
#| fig.width: 4
#| fig.height: 2.6
#| fig.cap: Histograms of person-specific contrasts on the raw scaled and standardized scale.

posterior_pid_sum |> 
  ggplot(aes(y, name)) +
  stat_slab(
    density = "histogram", 
    breaks = 100, 
    slab_color = "white", 
    outline_bars = TRUE, 
    linewidth = .25
  ) +
  geom_vline(xintercept = 0, linewidth = .33, col = "dodgerblue") +
  scale_x_continuous(
    "During play - pre-play contrast",
    breaks = extended_breaks(7)
  ) +
  scale_y_discrete(
    breaks = c("b_post1", "b_post1_z"),
    labels = c("Raw", "Scaled"),
    expand = expansion(c(0.05, 0.01))
  ) +
  theme(
    axis.title.y = element_blank()
  ) +
  coord_cartesian(ylim = c(1, 2.5), xlim = c(-0.2, 0.4))
```

```{r}
p_mood_difference_players$data |> 
  left_join(posterior_pid) |> 
  left_join(count(dat, pid)) |> 
  ggplot(aes(Difference, y, alpha = n, size = n)) +
  scale_x_continuous(
    "Difference"
  ) +
  scale_y_continuous(
    "Modelled difference"
  ) +
  coord_cartesian(
    xlim = c(-1, 1), ylim = c(-.5, .5)
  ) +
  geom_point() +
  geom_abline() +
  theme(aspect.ratio = 1)
```

